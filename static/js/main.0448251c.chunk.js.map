{"version":3,"sources":["Form.tsx","Remove.tsx","List.tsx","assets/icon.png","App.tsx","index.tsx"],"names":["Form","props","useState","task","setTask","className","onSubmit","event","preventDefault","setTasks","tasks","checked","onChange","e","target","value","placeholder","type","Remove","onClick","window","confirm","newTasks","filter","t","List","handleCheck","map","push","dataset","index","console","log","length","i","data-index","id","htmlFor","App","src","Icon","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAkCeA,MAzBf,SAAcC,GAAmB,IAAD,EACNC,mBAAS,IADH,mBACvBC,EADuB,KACjBC,EADiB,KAU9B,OACE,yBAASC,UAAU,gBAAnB,SACE,uBAAMC,SATV,SAAsBC,GACpBA,EAAMC,iBAENP,EAAMQ,SAAN,sBAAmBR,EAAMS,OAAzB,CAAgC,CAAEC,SAAS,EAAOR,WAClDC,EAAQ,KAKN,UACE,uBACEQ,SAAU,SAACC,GAAD,OAAOT,EAAO,OAACS,QAAD,IAACA,OAAD,EAACA,EAAGC,OAAOC,QACnCC,YAAY,iBACZC,KAAK,OACLF,MAAOZ,IAET,wBAAQc,KAAK,SAAb,6BCFOC,MAjBf,YAAuD,IAAtCf,EAAqC,EAArCA,KAAMO,EAA+B,EAA/BA,MAAOD,EAAwB,EAAxBA,SAY5B,OACE,wBAAQU,QAXV,WACE,GAAGC,OAAOC,QAAQ,mBAAoB,CACpC,IAAIC,EAAWZ,EAAMa,QAAO,SAAAC,GAC1B,OAAOA,EAAErB,OAASA,EAAKA,QAGzBM,EAASa,KAKsBjB,UAAU,cAA3C,gB,MC4BWoB,MAzCf,SAAcxB,GACZ,SAASyB,EAAYnB,GACnB,IAAIe,EAAW,GAEfrB,EAAMS,MAAMiB,KAAI,SAAAH,GAAC,OAAIF,EAASM,KAAKJ,MAEnCF,EAASf,EAAMO,OAAOe,QAAQC,OAAOnB,SAClCW,EAASf,EAAMO,OAAOe,QAAQC,OAAOnB,QAExCV,EAAMQ,SAASa,GACfS,QAAQC,IAAI/B,EAAMS,OAGpB,OACE,gCACE,sBAAKL,UAAU,eAAf,UACE,kDACA,uBAAMA,UAAU,aAAhB,UAA8BJ,EAAMS,MAAMuB,OAA1C,mBAEF,yBAAS5B,UAAU,YAAnB,SACE,6BACGJ,EAAMS,MAAMiB,KAAI,SAACxB,EAAM+B,GAAP,OACf,+BACE,uBACEC,aAAYD,EACZtB,SAAUc,EACVf,QAASR,EAAKQ,QACdyB,GAAE,eAAUF,EAAV,YAAe/B,EAAKA,MACtBc,KAAK,aAEP,uBAAOoB,QAAO,eAAUH,EAAV,YAAe/B,EAAKA,MAAlC,SAA2CA,EAAKA,OAEhD,cAAC,EAAD,CAAQA,KAAMA,EAAMO,MAAOT,EAAMS,MAAOD,SAAUR,EAAMQ,aAV1D,eAAiByB,eC/Bd,G,MAAA,IAA0B,kCCwB1BI,MAjBf,WAAgB,IAAD,EACapC,mBAAmB,IADhC,mBACNQ,EADM,KACCD,EADD,KAGb,OACE,iCACE,sBAAKJ,UAAU,SAAf,UACE,qBAAKA,UAAU,YAAYkC,IAAMC,EAAOC,IAAI,UAC5C,+CAGF,cAAC,EAAD,CAAM/B,MAAOA,EAAOD,SAAUA,IAE9B,cAAC,EAAD,CAAMA,SAAUA,EAAUC,MAAOA,QCfvCgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0448251c.chunk.js","sourcesContent":["import { FormEvent, useState } from \"react\";\n\nimport \"./styles/form.scss\";\n\ntype FormProps = {\n  tasks: object[];\n  setTasks: (tasks: object[]) => void;\n};\n\nfunction Form(props: FormProps) {\n  const [task, setTask] = useState('');\n\n  function handleSubmit(event: FormEvent) {\n    event.preventDefault();\n\n    props.setTasks([...props.tasks, { checked: false, task }])\n    setTask('')\n  }\n\n  return (\n    <section className=\"form-add-task\">\n      <form onSubmit={handleSubmit}>\n        <input\n          onChange={(e) => setTask(e?.target.value)}\n          placeholder=\"Nome da tarefa\"\n          type=\"text\"\n          value={task}\n        />\n        <button type=\"submit\">Adicionar</button>\n      </form>\n    </section>\n  );\n}\n\nexport default Form;\n","type RemoveProps = {\n  task: {\n    task?: string | undefined,\n    checked?: boolean | undefined\n  };\n  tasks: { checked?: boolean; task?: string }[];\n  setTasks: (tasks: object[]) => void;\n}\n\nfunction Remove({task, tasks, setTasks}: RemoveProps) {\n\n  function handleRemove() {\n    if(window.confirm('Remover Tarefa?')) {\n      let newTasks = tasks.filter(t => {\n        return t.task !== task.task\n      })\n\n      setTasks(newTasks)\n    }\n  }\n\n  return (\n    <button onClick={ handleRemove } className=\"remove-task\">X</button>\n  )\n}\n\nexport default Remove","import Remove from './Remove';\n\nimport \"./styles/list.scss\";\n\ntype ListProps = {\n  tasks: { checked?: boolean; task?: string }[];\n  setTasks: (tasks: object[]) => void;\n};\n\nfunction List(props: ListProps) {\n  function handleCheck(event: any) {\n    let newTasks = [] as { checked?: boolean, task?: string }[]\n\n    props.tasks.map(t => newTasks.push(t))\n\n    newTasks[event.target.dataset.index].checked =\n      !newTasks[event.target.dataset.index].checked;\n\n    props.setTasks(newTasks);\n    console.log(props.tasks);\n  }\n\n  return (\n    <div>\n      <div className=\"task-headers\">\n        <h4>Lista de tarefas</h4>\n        <span className=\"task-count\">{props.tasks.length} tarefa(s)</span>\n      </div>\n      <section className=\"task-list\">\n        <ul>\n          {props.tasks.map((task, i) => (\n            <li key={`task-${i}`}>\n              <input\n                data-index={i}\n                onChange={handleCheck}\n                checked={task.checked}\n                id={`task-${i}-${task.task}`}\n                type=\"checkbox\"\n              />\n              <label htmlFor={`task-${i}-${task.task}`}>{task.task}</label>\n              \n              <Remove task={task} tasks={props.tasks} setTasks={props.setTasks} />\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nexport default List;\n","export default __webpack_public_path__ + \"static/media/icon.9981fb43.png\";","import React, { useState } from 'react';\n\nimport Form from './Form'\nimport List from './List';\nimport './styles/global.scss'\nimport Icon from './assets/icon.png'\n\nfunction App() {\n  const [tasks, setTasks] = useState<object[]>([]);\n\n  return (\n    <main>\n      <div className=\"header\">\n        <img className=\"task-icon\" src={ Icon } alt=\"Icone\"/>\n        <h1>To Do List</h1>\n      </div>\n\n      <Form tasks={tasks} setTasks={setTasks} />\n\n      <List setTasks={setTasks} tasks={tasks} />\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}